---
- hosts: localhost
  gather_facts: no
  collections:
    - dellemc.powerscale
  vars_files:
    - login.yml
  vars:
    api_user: "{{ username }}"
    api_password: "{{ password }}"
    verify_ssl: "{{ certs }}"

  tasks:
  - name: include variables
    include_vars: "zone-test.yml"
 
  - name: Get North SyncIQ policy
    register: north_info
    synciqpolicy:
      onefs_host: "{{ north.cluster }}"
      policy_name: "{{ north.policy }}"
      state: "present"
      api_user: "{{ isilon_username }}"
      api_password: "{{ isilon_password }}"
      verify_ssl: false

  - name: Get Southth SyncIQ policy
    register: south_info
    synciqpolicy:
      onefs_host: "{{ south.cluster }}"
      policy_name: "{{ south.policy }}"
      state: "present"
      api_user: "{{ isilon_username }}"
      api_password: "{{ isilon_password }}"
      verify_ssl: false

  - set_fact: #Set source and destination cluster information
      src_cluster: "{{ north.cluster }}"
      dst_cluster: "{{ south.cluster }}"
      src_policy:  "{{ north.policy }}"
      dst_policy:  "{{ south.policy }}"
      target_host: "{{ north_info.synciq_policy_details.target_host }}"
    when: (north_info.synciq_policy_details.enabled == true) and (north_info.synciq_policy_details.schedule != "")

  - set_fact: #Set source and destination cluster information
      src_cluster: "{{ south.cluster }}"
      dst_cluster: "{{ north.cluster }}"
      src_policy:  "{{ south.policy }}"
      dst_policy:  "{{ north.policy }}"
      target_host: "{{ south_info.synciq_policy_details.target_host }}"
    when: (south_info.synciq_policy_details.enabled == true) and (south_info.synciq_policy_details.schedule != "")
  
  
#  - debug:
      #var: north_info.synciq_policy_details.enabled
      #var: north_info.synciq_policy_details.schedule

#  - debug:
#      var: src_cluster,src_policy,dst_cluster,dst_policy,target_host

  - name: Get destination sync target state 
    synciqtargetreports:
      onefs_host: "{{ dst_cluster }}"
      name: "{{ src_policy }}"
      include_sub_reports: "True"
      state: "present"
      api_user: "{{ isilon_username }}"
      api_password: "{{ isilon_password }}"
      verify_ssl: false
    register: target_info
    #until: target_info.synciq_target_report_details.reports[0].state == "finished"
    #delay: 10
    #retries: 60


  - debug:
      #var: target_info.synciq_target_report_details.reports[0].state
      var: target_info.synciq_target_subreport_details.subreports[0].action,target_info.synciq_target_subreport_details.subreports[0].state
